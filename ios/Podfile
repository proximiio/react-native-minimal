require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

use_frameworks!
platform :ios, '13.0'

$RNMBGL_Use_SPM = true
$RNMGL_USE_MAPLIBRE = true

STATIC_LIBRARIES = [
  'RNScreens',
  'react-native-compass-heading',
  'react-native-safe-area-context',
  'react-native-mapbox-gl',
  'RNVectorIcons',
  'RNCMaskedView',
  'RNDefaultPreference',
  'react-native-proximiio'
]

install! 'cocoapods', :disable_input_output_paths => true

target 'RNTest' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  target 'RNTestTests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!()

  pre_install do |installer|
    $RNMBGL.pre_install(installer)
    installer.pod_targets.each do |pod|
     if STATIC_LIBRARIES.include?(pod.name)
       def pod.build_type
         Pod::BuildType.static_library
       end
     end
   end
  end

  post_install do |installer|
    $RNMBGL.post_install(installer)
    react_native_post_install(installer)
    #__apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
     target.build_configurations.each do |config|
         config.build_settings['ENABLE_BITCODE'] = 'NO'
     end

     installer.pods_project.targets.each do |target|
       target.build_configurations.each do |config|
         config.build_settings['ARCHS'] = '${ARCHS_STANDARD_64_BIT}'
       end
     end

     # https://github.com/facebook/react-native/issues/31034
     if (target.name&.eql?('FBReactNativeSpec'))
       target.build_phases.each do |build_phase|
         if (build_phase.respond_to?(:name) && build_phase.name.eql?('[CP-User] Generate Specs'))
           target.build_phases.move(build_phase, 0)
         end
       end
     end
   end
  end
end
